@using BlazorApp1.Service
@using BlazorApp1.Models
@using Syncfusion.Blazor.Navigations
@inject CustomAuthStateProvider _customStateProvider
@inject AuthenticationStateProvider _authenticationStateProvider
@inject HttpClient httpClient
@inject NavigationManager _navigationManager;
@inject AuthService authService
@inject TemporaryStorageService storageService
@page "/"
@layout MainLayout



<AuthorizeView>
	<NotAuthorized>
		Can you see this
	</NotAuthorized>
	<Authorized>

        <div class="form-container">
            <div class="card mb-3" style="background-color: lightblue;">
                <form >
                    <center><h3>THÔNG TIN CÁ NHÂN</h3></center>
                    @foreach (var claim in @context.User.Claims.Take(4))
                    {
                        @if (@claim.Type == "name")
                        {
                            <div class="mb-3">
                                <label for="name" class="form-label">Họ và tên:</label>
                                <input type="text" id="name" class="form-control" value="@claim.Value" readonly>
                            </div>
                        }
                        @if (@claim.Type == "email")
                        {
                            <div class="mb-3">
                                <label for="email" class="form-label">Email:</label>
                                <input type="email" id="email" class="form-control" value="@claim.Value" readonly>
                            </div>
                        }
                        @if (@claim.Type == "gender")
                        {
                            <div class="mb-3">
                                <label for="phone" class="form-label">Số điện thoại:</label>
                                <input type="text" id="phone" class="form-control" value="@claim.Value" readonly>
                            </div>
                        }
                    }
                </form>
            </div>

            <div class="card mb-3" style="background-color: lightblue;">
                <form>
                    <div class="mb-3">
                        <label for="mssv" class="form-label">Mã số sinh viên<span class="text-danger">*</span>:</label>
                        <input type="text" id="mssv" name="mssv" @bind="searchQuery" placeholder="Nhập mã số sinh viên" class="form-control" required>
                    </div>

                    <div class="d-grid gap-2">
                        <div class="btn btn-primary" @onclick="GetStudent">Tìm kiếm  → </div>
                    </div> <br />
                    <h3>THÔNG TIN SINH VIÊN</h3>
                    <div class="mb-3">
                        <label for="mssv" class="form-label">MSSV:</label>
                        <input type="text" id="mssv" class="form-control" value="@((student != null) ? student.MSSV : "")" placeholder="Mã số sinh viên" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="name" class="form-label">Họ và tên sinh viên:</label>
                        <input type="text" id="name" class="form-control" value="@((student != null) ? student.HoVaTen : "")" placeholder="Họ tên sinh viên" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="tuition" class="form-label">Số tiền nợ học phí:</label>
                        <input type="text" id="tuition" class="form-control" value="@totalTuition.ToString("N0") vnđ" readonly>
                    </div>
                </form>
            </div>

            <div class="card mb-3" style="background-color: lightblue;">
                <form>
                    <h3>THÔNG TIN THANH TOÁN</h3>
                    <div class="mb-3">
                        <label for="sodu" class="form-label">Số dư khả dụng:</label>
                        @foreach (var claim in @context.User.Claims.Take(4))
                        {
                            @if (@claim.Type == "sub")
                            {
                                <input type="text" id="sodu" class="form-control" value="@claim.Value vnđ" readonly />
                            }
                        }
                    </div>
                    <div class="mb-3">
                        <label for="tuition" class="form-label">Số tiền học phí cần thanh toán:</label>
                        <input type="text" id="tuition" class="form-control" value="@totalTuition.ToString("N0") vnđ" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="tuition" class="form-label">Số dư sau khi thanh toán:</label>
                        @foreach (var claim in @context.User.Claims.Take(4))
                        {
                            @if (@claim.Type == "sub")
                            {
                                <input type="text" id="after" class="form-control" value="@(double.Parse(claim.Value) - totalTuition) vnđ" readonly />
                            }
                        }
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            Chấp nhận đồng ý các <a href="#">thỏa thuận</a> của hệ thống.
                        </label>
                    </div><br />
                    <div class="d-grid gap-2">
                        <button type="button" class="btn btn-primary" onclick="editForm()">Thanh toán</button>
                    </div>
                </form>
            </div>

        </div>
	</Authorized>
</AuthorizeView>

@code {
    [Parameter]
    public EventCallback OnSubmitted { get; set; }

    private bool isAuthenticated;
    private int selectedMSSV;

    private List<SinhVienViewModel> sinhviens;
    private SinhVienViewModel student;
    private List<HoaDonViewModel> hoaDons;
    private List<HoaDonViewModel> HDSV;
    private string searchQuery;
    private double totalTuition = 0;
    private double after = 0;
    private double sodu = 0;

    private void GetStudent()
    {
        student = sinhviens.FirstOrDefault(s => s.MSSV.ToString().Contains(searchQuery, StringComparison.OrdinalIgnoreCase));
        if(student != null && hoaDons != null)
        {
            HDSV = hoaDons.Where(h => h.MSSV.ToString().Contains(searchQuery, StringComparison.OrdinalIgnoreCase)).ToList();
            double sum = 0;
            if (HDSV != null)
            {
                foreach (var hoadon in HDSV)
                {
                    sum += hoadon?.Money ?? 0;
                }
            }
            totalTuition = sum;
        }
        else
        {
            totalTuition = 0;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        sinhviens = await httpClient.GetFromJsonAsync<List<SinhVienViewModel>>("/api/SinhVien");
        hoaDons = await httpClient.GetFromJsonAsync<List<HoaDonViewModel>>("/api/HoaDon");
    }


    private async Task HandleStudentClick(int mssv)
    {
        await storageService.SetMSSV(mssv);
        await OnSubmitted.InvokeAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await authService.isAuthenticated();
            if (!isAuthenticated)
            {
                _navigationManager.NavigateTo("/login");
            }
        }
    }
}

<style>
    .form-container {
        display: flex;
        justify-content: space-evenly;
    }

    .card {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        padding: 25px;
    }

        .card:hover {
            transform: translateY(-5px);
        }
</style>

<style>
    @@font-face {
	font-family: 'Default';
	src: url(data:application/x-font-ttf;charset=utf-8;base64,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) format('truetype');
	font-weight: normal;
	font-style: normal;
}

[class^="sf-icon-"], [class*=" sf-icon-"] {
	font-family: 'Default' !important;
	speak: none;
	font-style: normal;
	font-weight: normal;
	font-variant: normal;
	text-transform: none;
	line-height: inherit;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.sf-icon-cart:before {
	content: "\e710";
}

.sf-icon-transport:before {
	content: "\e702";
}

.sf-icon-payment:before {
	content: "\e706";
}

.sf-icon-success:before {
	content: "\e715";
}

.label-stepper-control {
	margin: 30px auto;
}

#container {
	text-align: center;
}

</style>
